Valores<-c("NIG", "Norm")
Valor<-c("Return", "STD","Sharpe","CumRet")
NIG<-c("0.0397", "0.1481","0.2678","0.8268522")
df<-data.frame(Valor,NIG)
df
NIG<-c("0.0397", "0.1481","0.2678","0.8268")
df<-data.frame(Valor,NIG)
df
df<-as.data.frame(Valor,NIG)
df
df<-data.frame(Valor,NIG)
df
df<-as.data.frame(NIG,Valor)
df
NIG<-c(" 0.0397", " 0.1481"," 0.2678"," 0.8268")
df<-as.data.frame(NIG,Valor)
df
?as.data.frame()
View(df)
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(readxl)
library(fBasics)
library(ghyp)
g1<- read_excel("D:/JL/Market-Index-Portafolios/APLHA/ALPHA 1/ALPHA 1.1/1.1.3Portafolio_Optimization/Optimizacion en excel/NIG/Optimizacion (el bueno1).xlsx",
sheet = "Datos")
colnames(g1)<-c("Fecha","DJI",	"HSI",	"OMX20",	"STI",	"FTSE")
DJI<-xts(g1$DJI,as.Date(g1$Fecha))
HSI<-xts(g1$HSI,as.Date(g1$Fecha))
OMX20<-xts(g1$OMX20,as.Date(g1$Fecha))
STI<-xts(g1$STI,as.Date(g1$Fecha))
FTSE<-xts(g1$FTSE,as.Date(g1$Fecha))
Portafolio_NORM<-merge.xts(DJI,HSI,OMX20,STI,FTSE)
Specs_Port_NORM <- portfolio.spec(c("DJI",	"HSI",	"OMX20",	"STI",	"FTSE"))
##### Add Constraints #####
Specs_Port_NORM <- add.constraint(Specs_Port_NORM,type="full_investment")
Specs_Port_NORM <- add.constraint(Specs_Port_NORM,type="long_only")
##### Add Objective #####
Specs_Port_NORM <- add.objective(Specs_Port_NORM,type="risk",name="StdDev")
Specs_Port_NORM <- add.objective(Specs_Port_NORM,type='return',name='mean')
Specs_Port_NORM
Optimized_Port_NORM <- optimize.portfolio(Portafolio_NORM,
Specs_Port_NORM,
optimize_method = "random",
trace = TRUE)
chart.Weights(Optimized_Port_NORM,plot.type="barplot")
W_R_NORM <- extractWeights(Optimized_Port_NORM)
sum(W_R_NORM)
Return_opt_NORM <- Return.portfolio(Portafolio_NORM,W_R_NORM)
table.AnnualizedReturns(Return_opt_NORM,
scale = 252,
geometric = FALSE)
Return.cumulative(Return_opt_NORM,
geometric = FALSE)
chart.RiskReward(Optimized_Port_NORM,
risk.col = 'StdDev',
return.col = 'mean',
chart.assets = T)
a<-Return.cumulative(Return_opt_NORM,
geometric = FALSE)
View(a)
Valor<-c("Return", "STD","Sharpe","CumRet")
NIG<-c(" 0.0397", " 0.1481"," 0.2678"," 0.8268")
Normal<-c(" 0.0434","0.1482"," 0.2929"," 0.90544")
Alpha1.1<-as.data.frame(NIG,Valor)
Alpha1.1
Alpha1.1<-as.data.frame(NIG,Valor,Normal)
Normal<-c(" 0.0434","0.1482"," 0.2929"," 0.90544")
Alpha1.1<-as.data.frame(NIG,Valor,Normal)
Alpha1.1<-data.frame(NIG,Valor,Normal)
Alpha1.1
Alpha1.1<-data.frame(NIG,Normal)
colnames(Alpha1.1)<-Valor
Alpha1.1
row.names(Alpha1.1)<-Valor
Alpha1.1
NIG<-c(" 0.0397", " 0.1481"," 0.2678"," 0.8268")
Normal<-c(" 0.0434","0.1482"," 0.2929"," 0.90544")
Alpha1.1<-data.frame(NIG,Normal)
row.names(Alpha1.1)<-c("Return", "STD","Sharpe","CumRet")
Alpha1.1
NIG_1.1<-c(" 0.0397", " 0.1481"," 0.2678"," 0.8268")
Normal_1.1<-c(" 0.0434","0.1482"," 0.2929"," 0.90544")
Alpha1.1<-data.frame(NIG_1.1,Normal_1.1)
row.names(Alpha1.1)<-c("Return", "STD","Sharpe","CumRet")
Alpha1.1
View(Alpha1.1)
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(readxl)
library(fBasics)
library(ghyp)
g1<- read_excel("D:/JL/Market-Index-Portafolios/APLHA/ALPHA 1/ALPHA 1.2/1.2.4 Optimizaci?n/Optimizacion NIG alpha 1.2.xlsx",
sheet = "Datos")
library(readxl)
Optimizacion_NIG_alpha_1_2 <- read_excel("~/Documents/GitHub/Market-Index-Portafolios/APLHA/ALPHA 1/ALPHA 1.2/1.2.4 Optimización/Optimizacion NIG alpha 1.2.xlsx",
col_types = c("date", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
View(Optimizacion_NIG_alpha_1_2)
g1<- Optimizacion_NIG_alpha_1_2
colnames(g1)<-c("Fecha","DJI",	"HSI",	"OMX20",	"STI",	"FTSE")
View(g1)
colnames(g1)<-c("Fecha","DJI","HSI","OMX20","STI","FTSE")
g1 <- colnames(g1)<-c("Fecha","DJI","HSI","OMX20","STI","FTSE")
g1 <- Optimizacion_NIG_alpha_1_2
colnames(g1)<-c("Fecha","DJI","HSI","OMX20","STI","FTSE")
DJI<-xts(g1$DJI,as.Date(g1$Fecha))
g1 <- na.locf(g1)
g1 <- Optimizacion_NIG_alpha_1_2
g1 <- g1[,-7]
View(g1)
rendimientos <- xts(g1[,2:6])
rendimientos <- xts(g1[,2:6], order.by = as.Date(g1$...1))
library(naniar)
g1 %>%
vis_miss()
?drop.na
?drop_na
g1 <- g1%>%
drop_na()
library(nanira)
library(naniar)
g1 %>%
vis_miss()
g1 <- g1 %>%
drop_na()
?drop_na
library(tidyr)
g1 <- g1 %>%
drop_na()
g1 %>%
vis_miss()
View(g1)
rendimientos <- xts(g1[,2:6], order.by = as.Date(g1$...1))
View(rendimientos)
Specs_Port1 <- portfolio.spec(c("DJI",	"HSI",	"OMX20",	"STI",	"FTSE"))
##### Add Constraints #####
Specs_Port1 <- add.constraint(Specs_Port1,type="full_investment")
Specs_Port1 <- add.constraint(Specs_Port1,type="long_only")
##### Add Objective #####
Specs_Port1 <- add.objective(Specs_Port1,type="risk",name="StdDev")
Specs_Port1 <- add.objective(Specs_Port1,type='return',name='mean')
Specs_Port1
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
Optimized_Port1 <- optimize.portfolio(Portafolio,
Specs_Port1,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
Optimized_Port1 <- optimize.portfolio(rendimientos,
Specs_Port1,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
chart.Weights(Optimized_Port1,plot.type = "barplot")
W_R <- extractWeights(Optimized_Port1)
sum(W_R)
Return_opt1 <- Return.portfolio(rendimientos,W_R)
table.AnnualizedReturns(Return_opt1,
scale = 252,
geometric = FALSE)
Return.cumulative(Return_opt1,
geometric = FALSE)
chart.RiskReward(Optimized_Port1,
risk.col = 'StdDev',
return.col = 'mean',
chart.assets = T)
?addPoints
Points()
points(y=0.0015, x=0.010, col="red")
?chart.RiskReward
View(Optimized_Port1)
rand <- Optimized_Port1$random_portfolios
View(rand)
View(Optimized_Port1)
medias <- NULL
for (i in 1:1839) {
medias[i] <- Optimized_Port1$random_portfolio_objective_results[[i]]$objective_measures$mean
}
standDevi <- NULL
for (i in 1:1839) {
medias[i] <- Optimized_Port1$random_portfolio_objective_results[[i]]$objective_measures$mean
standDevi[i] <- Optimized_Port1$random_portfolio_objective_results[[1]]$objective_measures$StdDev
}
frontera <- tibble(volatilidad = standDevi, ExpectedRet = medias)
View(frontera)
library(tidyverse)
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point()
View(frontera)
medias <- NULL
standDevi <- NULL
for (i in 1:1839) {
medias[i] <- Optimized_Port1$random_portfolio_objective_results[[i]]$objective_measures$mean
standDevi[i] <- Optimized_Port1$random_portfolio_objective_results[[i]]$objective_measures$StdDev
}
frontera <- tibble(volatilidad = standDevi, ExpectedRet = medias)
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point()
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4)
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4, col="blue")
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4, col="blue")+
geom_point(data=tibble(volatilidad = 0.1567/sqr(252), ExpectedRet = 0.0487/252))
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4, col="blue")+
geom_point(data=tibble(volatilidad = 0.1567/sqrt(252), ExpectedRet = 0.0487/252))
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4, col="blue")+
geom_point(data=tibble(volatilidad = 0.1567/sqrt(252), ExpectedRet = 0.0487/252),
col="red")
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4, col="blue")+
geom_point(data=tibble(volatilidad = 0.1567/sqrt(252), ExpectedRet = 0.0487/252),
col="red", size = 3)
0.1567/sqrt(252)
View(Optimized_Port1)
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4, col="blue")+
geom_point(data=tibble(volatilidad = Optimized_Port1$objective_measures$StdDev, ExpectedRet = Optimized_Port1$objective_measures$mean),
col="red", size = 3)
View(Optimizacion_NIG_alpha_1_2)
Optimized_Port2 <- optimize.portfolio(rendimientos,
Specs_Port1,
optimize_method = "random",
trace = TRUE)
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4, col="blue")+
geom_point(data=tibble(volatilidad = Optimized_Port1$objective_measures$StdDev, ExpectedRet = Optimized_Port1$objective_measures$mean),
col="red", size = 3)+
geom_point(data=tibble(volatilidad = Optimized_Port2$objective_measures$StdDev, ExpectedRet = Optimized_Port2$objective_measures$mean),
col="red", size = 3)
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.4, col="blue")+
geom_point(data=tibble(volatilidad = Optimized_Port1$objective_measures$StdDev, ExpectedRet = Optimized_Port1$objective_measures$mean),
col="red", size = 3)+
geom_point(data=tibble(volatilidad = Optimized_Port2$objective_measures$StdDev, ExpectedRet = Optimized_Port2$objective_measures$mean),
col="green", size = 3)
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.3, col="blue")+
geom_point(data=tibble(volatilidad = Optimized_Port1$objective_measures$StdDev, ExpectedRet = Optimized_Port1$objective_measures$mean),
col="red", size = 3)+
geom_point(data=tibble(volatilidad = Optimized_Port2$objective_measures$StdDev, ExpectedRet = Optimized_Port2$objective_measures$mean),
col="green", size = 3)
?chart.RiskReward
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(readxl)
library(fBasics)
library(ghyp)
library(naniar)
library(tidyverse)
library(readxl)
Optimizacion_NIG_alpha_1_2 <- read_excel("~/Documents/GitHub/Market-Index-Portafolios/APLHA/ALPHA 1/ALPHA 1.2/1.2.4 Optimización/Optimizacion NIG alpha 1.2.xlsx",
col_types = c("date", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
View(Optimizacion_NIG_alpha_1_2)
g1 <- Optimizacion_NIG_alpha_1_2
#Esta base de datos ya tiene los retornos de los indices, no sacar retornos otra vez
g1 <- g1[,-7]
View(g1)
colnames(g1)<-c("Fecha","DJI","HSI","OMX20","STI","FTSE")
View(g1)
g1 %>%
vis_miss()
g1 <- g1 %>%
drop_na()
g1 %>%
vis_miss()
rendimientos <- xts(g1[,2:6], order.by = as.Date(g1$Fecha))
View(rendimientos)
Specs_Port1 <- portfolio.spec(c("DJI",	"HSI",	"OMX20",	"STI",	"FTSE"))
##### Add Constraints #####
Specs_Port1 <- add.constraint(Specs_Port1,type="full_investment")
Specs_Port1 <- add.constraint(Specs_Port1,type="long_only")
##### Add Objective #####
Specs_Port1 <- add.objective(Specs_Port1,type="risk",name="StdDev")
Specs_Port1 <- add.objective(Specs_Port1,type='return',name='mean')
Specs_Port1
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
Optimized_Port1 <- optimize.portfolio(rendimientos,
Specs_Port1,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
chart.Weights(Optimized_Port1,plot.type = "barplot")
W_R <- extractWeights(Optimized_Port1)
W_R
Return_opt1 <- Return.portfolio(rendimientos, W_R)
View(Return_opt1)
table.AnnualizedReturns(Return_opt1,
scale = 252,
geometric = FALSE)
Return.cumulative(Return_opt1,
geometric = FALSE)
chart.RiskReward(Optimized_Port1,
risk.col = 'StdDev',
return.col = 'mean',
chart.assets = T)
chart.RiskReward(Optimized_Port1,
risk.col = 'StdDev',
return.col = 'mean',
chart.assets = T)
?chart.RiskReward
View(Optimizacion_NIG_alpha_1_2)
rand <- Optimized_Port1$random_portfolios
stdv <-Optimized_Port1$random_portfolio_objective_results[[1]]$objective_measures$StdDev
View(Optimized_Port1)
View(rand)
View(Return_opt1)
Optimized_Port1[["objective_measures"]][["StdDev"]][["StdDev"]]
Optimized_Port1[["objective_measures"]][["StdDev"]]
Optimized_Port1[["objective_measures"]][["mean"]][["mean"]]
stdv <-Optimized_Port1$random_portfolio_objective_results[[1]]$objective_measures$StdDev
medias <- Optimized_Port1$random_portfolio_objective_results[[1]]$objective_measures$mean
medias <- NULL
standDevi <- NULL
for (i in 1:1839) {
medias[i] <- Optimized_Port1$random_portfolio_objective_results[[i]]$objective_measures$mean
standDevi[i] <- Optimized_Port1$random_portfolio_objective_results[[i]]$objective_measures$StdDev
}
i
for (i in 1:1782) {
medias[i] <- Optimized_Port1$random_portfolio_objective_results[[i]]$objective_measures$mean
standDevi[i] <- Optimized_Port1$random_portfolio_objective_results[[i]]$objective_measures$StdDev
}
Optimized_Port2 <- optimize.portfolio(rendimientos,
Specs_Port1,
optimize_method = "random",
trace = TRUE)
frontera <- tibble(volatilidad = standDevi, ExpectedRet = medias)
frontera %>%
ggplot(aes(x=volatilidad, y=ExpectedRet))+
geom_point(alpha=0.3, col="blue")+
geom_point(data=tibble(volatilidad = Optimized_Port1$objective_measures$StdDev, ExpectedRet = Optimized_Port1$objective_measures$mean),
col="red", size = 3)+
geom_point(data=tibble(volatilidad = Optimized_Port2$objective_measures$StdDev, ExpectedRet = Optimized_Port2$objective_measures$mean),
col="green", size = 3)
