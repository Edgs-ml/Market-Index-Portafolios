---
title: "Clase 2 - Manejo y Limpieza de Datos Financieros"
author: "Edgar Sigfrido Soto Aparicio"
date: "9/25/2021"
output: html_document
---
#### Objetivo: 
#     Cargar bases de datos de la sesión
#     Detección de valores faltantes
#     Visualización del impacto de NA?s
#     Propuestas para trabajar con NA?s
#     Técnicas de visualización de datos univariados

#### Comandos clave:
#     glimpse() de dplyr: columns run down the page, and data runs across. 
      This makes it possible to see every column in a data frame.
#     select() 
#     vis_miss()
#     drop_na()
#     filter()
#     describe() de psych 

# Workflow trabajo con NA?s
#   1. Conocer las librerias útiles para este trabajo
#   2. Exploración de la base de datos
#   3. Elegir procedimiento de depuración
#       2.1. Quitar NA?s (La cantidad de datos no le quite relevancia a la BD)
#       2.2. Llenar NA?s (No sesgar la BD con el relleno)
#   4. Detección de Valores Atipicos
#   5. Limpieza de VA (si 2.1. FIN)
#   6. En caso de 2.2. Determinar estadisticas sin VA
#   7. Llenar NA?s con estadisticas (FIN)

##### 1) Cargar librerias
```{r}
library(tidyverse) # Incluye ggplot2, dplyr y readr.
library(psych) #trabajar con estadisticas que usan los psicologos
library(naniar) # Hace referencia a estadisticas o valores faltantes. drop_na()
library(visdat) # Visualiza datos
library(moments) # Calcular estadisticas de momentos elevados
```

##### 2) Cargar Base de Datos
```{r}
FinancialData <- read_csv("Desktop/Algoritmos & Análisis de Datos/Semana 1/FinancialData.csv"))
View(FinancialData)
glimpse(FinancialData)
```

##### 3) Seleccionar Variables Relevantes
```{r}
FinancialData_Reduc <- FinancialData %>% 
  select(EPS,
         Dividend.per.Share,
         Total.assets,
         netProfitMargin,
         returnOnEquity,
         Sector,
         Year_Var_Price,
         Year,
         Class)
glimpse(FinancialData_Reduc)
describe(FinancialData_Reduc)
#Al observar el Mean de EPS nos damos cuenta que no hace sentido su valor
```

##### 4) Valores Faltantes
# 4.1) Conteo de valores faltantes
```{r}
FinancialData_Reduc %>% # Se lee cómo: toma el objeto X y entonces 
  n_miss() # regresa el número de valores faltantes en toda la BD
```
# 4.2) Proporción de los valores faltantes con valores totales
```{r}
FinancialData_Reduc %>% 
  prop_miss()
```
# 4.3) Análisis de la base
```{r}
FinancialData_Reduc %>% 
  miss_var_summary() #Muestra dentro de cada columna cuantos valores están faltando y su proporción
FinancialData_Reduc %>% 
  miss_var_summary() %>%
  arrange(pct_miss)
```

# 4.4) Visualización de valores faltantes
```{r}
FinancialData_Reduc %>% 
  vis_miss()
```
##### 5) Tratamiento de valores faltantes. 2 Alternativas.
# Alternativa A: Quitarlos
# Beneficios: La informaci?n es la real, no se est? alterando
#             Los resultados son v?lidos para la muestra
# Contras: Se puede perder una gran cantidad de informaci?n
#          Los resultados dejan de ser v?lidos para la poblaci?n (en algunos casos)
# Operación: Uso del comando drop_na()
# 5.1A) Crear un nuevo objeto sin los valores faltantes
```{r}
FinancialData_No_NA <- FinancialData_Reduc %>% 
  drop_na()
glimpse(FinancialData_No_NA)
describe(FinancialData_No_NA)
FinancialData_No_NA %>% 
  vis_miss()
```
#Alternativa B: Llenarlos
# ¿Pero con qué valor llenamos los renglones faltanetes?

# Propuesta: usar medidas de tendencia central
# Si los datos se distribuyen Normal, media y mediana son iguales
# El caso más común es que esto no ocurra
# Media y Mediana suelen diferir
# NOTA: La estadistica usa la base completa, i.e. con los valores faltantes
# 5.1B) 
```{r}
mean(FinancialData_Reduc$EPS, na.rm = TRUE)# na.rm es un argumento que elimina los valores                                                faltantes (na.remove=TRUE)
median(FinancialData_Reduc$EPS, na.rm = TRUE)# preguntarle a Mario como hacer esto pero                                                     seleccionando las empresas de solo una industria                                              por ejemplo: $EPS de retail)
FinancialData_Reduc %>% 
  group_by(Sector) %>% 
  summarise(median(EPS), mean(EPS))  # dplyr si tienen un valor faltante todas las estadisticas saldrán como NA

FinancialData_Reduc %>% 
  group_by(Sector) %>% 
  summarise(median(EPS, na.rm = TRUE), mean(EPS, na.rm = TRUE))
```
# La regla de dedo es: si la información está sesgada, usar mediana
```{r}
skewness(FinancialData_Reduc$EPS, na.rm = TRUE)
# Los datos del EPS están sesgados, por lo tanto usaremos la mediana.
```
# Problema adicional: si hay valores atipicos, las estadisticas serán incorrectas
# 5.1.1B) Detección de valores atipicos para la variable EPS
```{r}
FinancialData_No_NA %>% 
  summarise(Media=mean(EPS),
            DesvEst=sd(EPS),
            Max=max(EPS),
            Min=min(EPS),
            Mediana=median(EPS),
            Rango=IQR(EPS))
```
# 5.1.2B) Visualizar los datos con un histograma de 100 barras
```{r}
FinancialData_No_NA %>% 
  ggplot(aes(x=EPS))+
  geom_histogram(bins = 100)
```
# 5.1.3B) Visualizar los datos con un diagrama de caja y bigotes
```{r}
FinancialData_No_NA %>% 
  ggplot(aes(x=EPS))+
  geom_boxplot()
```
# 5.1.4B) Visualizar la distribución de probabilidad
```{r}
FinancialData_No_NA %>% 
  ggplot(aes(x=EPS))+
  geom_density()
```
# 5.1.5B) Violin
```{r}
FinancialData_No_NA %>% 
  ggplot(aes(x=EPS,
             y=0))+
  geom_violin()
```
# 5.2B) Depuración de valores atipicos para la variable EPS
```{r}
FinancialData_cleanEPS <- FinancialData_No_NA %>% 
  filter(EPS>-1 & EPS<1) # ¿Qué significa que el rango sea de -1 a 1
                          # Los valores de EPS no deben de ir mas alla de -5 a 5, por sentido                           común
```

```{r}
FinancialData_cleanEPS %>% 
  summarise(Media=mean(EPS),
            DesvEst=sd(EPS),
            Max=max(EPS),
            Min=min(EPS),
            Mediana=median(EPS),
            Rango=IQR(EPS))
#####
FinancialData_cleanEPS %>% 
  ggplot(aes(x=EPS))+
  geom_histogram(bins = 100)+
  geom_vline(xintercept = mean(FinancialData_cleanEPS$EPS),
             col="red")+
  geom_vline(xintercept = median(FinancialData_cleanEPS$EPS),
             col="blue")
#####
FinancialData_cleanEPS %>% 
  ggplot(aes(x=EPS))+
  geom_boxplot()
######
FinancialData_cleanEPS %>% 
  ggplot(aes(x=EPS))+
  geom_density()
######
FinancialData_cleanEPS %>% 
  ggplot(aes(x=EPS,
             y=0))+
  geom_violin()
```

# 5.2B) Depuración de valores atipicos para la variable Dividen.per.Share
```{r}
FinancialData_cleanD.p.S <- FinancialData_cleanEPS %>% 
  filter(Dividend.per.Share>0 & Dividend.per.Share<15) 
hist(FinancialData_cleanD.p.S$Dividend.per.Share)
FinancialData_cleanD.p.S %>% 
  summarise(Media=mean(Dividend.per.Share),
            DesvEst=sd(Dividend.per.Share),
            Max=max(Dividend.per.Share),
            Min=min(Dividend.per.Share),
            Mediana=median(Dividend.per.Share),
            Rango=IQR(Dividend.per.Share))
FinancialData_cleanD.p.S %>%
  ggplot(aes(x=Dividend.per.Share))+
  geom_histogram(bins = 100)
```
```{r}
FinancialData_cleanD.p.S <- FinancialData_cleanEPS %>% 
  filter(Dividend.per.Share>0 & Dividend.per.Share<15) 
hist(FinancialData_cleanD.p.S$Dividend.per.Share)
FinancialData_cleanD.p.S %>% 
  summarise(Media=mean(Dividend.per.Share),
            DesvEst=sd(Dividend.per.Share),
            Max=max(Dividend.per.Share),
            Min=min(Dividend.per.Share),
            Mediana=median(Dividend.per.Share),
            Rango=IQR(Dividend.per.Share))
FinancialData_cleanD.p.S %>%
  ggplot(aes(x=Dividend.per.Share))+
  geom_histogram(bins = 100)
```








#### 















