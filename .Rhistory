?textshape
??textshape
library(tidyverse)
library(readxl)
library(textshape) #"Tools for Reshaping Text". Usado en columns_to_rownames
library(broom)
library(plotly)
library(scales)
library(caTools)
library(caret)
library(cluster)
library(factoextra) #Para graficar K-Means y PCA
library(psych)
library(stats) #Para hacer el PCA
library(naniar) #Para limpiar las bases de datos
library(fBasics) #Analisis estadistico
library(PerformanceAnalytics)
library(statmod)
df <- read_excel("~/Desktop/Market Index Portfolios/Bases de Datos/Criterios-Unificado.xlsx")
View(df)
df2 <- subset(df, Country!="China" & Country!="United States")
df2 <- column_to_rownames(df2, loc = 1)
View(df2)
# Data Frame with all variables and without China and USA
df <- column_to_rownames(df, loc = 1)
View(df)
# Data Frame with all variables and observations
describe(df)
df1 <- df[,-4]
cor.plot(df)
cor.plot(df)
cor.plot(df1)
cor.plot(df2)
library(psych) #Usado por su funsiÃ³n de crar matices de correlaciones de colores
pca_df<- prcomp(df)
View(pca_df)
pca_df1<- prcomp(df1)
pca_df2<- prcomp(df2)
summary(pca_df)
library(knitr)
kable(summay(pca_df))
kable(summary(pca_df))
summary(pca_df)
matr_df <- as.matrix(pca_df$sdev)
View(matr_df)
summary(pca_df)
View(pca_df)
pca_df[["x"]]
df_PC1234 <- cbind(df, pca_df$x)
df_PC1234_Descent <- df_PC1234 %>%
arrange(desc(PC1))
View(df_PC1234_Descent)
View(df_PC1234)
matr_df <- as.matrix(pca_df$sdev, pca_df[[1]])
View(matr_df)
View(df_PC1234_Descent)
df1_PC123 <- cbind(df1, pca_df1$x)
df1_PC123_Descent <- df1_PC123 %>%
arrange(desc(PC1))
df2_PC1234 <- cbind(df2, pca_df2$x)
df2_PC1234_Descent <- df2_PC1234 %>%
arrange(desc(PC1))
View(df2_PC1234_Descent)
kable(matr_df)
fviz_pca_ind(pca_df,
repel = TRUE,
title = "Place of each country in a PC1 and PC2 Map [With GDP]")
fviz_pca_ind(pca_df,
repel = TRUE,
title = "Place of each country in a PC1 and PC2 Map [With GDP]")
summary(pca_df)
summary(pca_df1)
summary(pca_df2)
fviz_pca_ind(pca_df1,
repel = TRUE,
title = "Place of each country in a PC1 and PC2 Map [Without GDP]")
fviz_pca_ind(pca_df2,
repel = TRUE,
title = "Place of each country [With GDP and without USA & China]")
fviz_pca_biplot(pca_df)
fviz_pca_biplot(pca_df1)
fviz_pca_biplot(pca_df2)
fviz_contrib(pca_df, choice = "var",
title = "Percentage of Variance contribution With Variable GDP",
addlabels = TRUE)
fviz_contrib(pca_df1, choice = "var",
title = "Percentage of Variance contribution Without Variable GDP",
addlabels = TRUE)
fviz_screeplot(pca_df1,
title = "3 Principal Components Without GDP",
addlabels = TRUE) # Porcentaje de la varianza explicada con el PCA1
fviz_eig(pca_df1, choice = "eigenvalue",
addlabels = TRUE,
title = "e")
cor.plot(df1_PC123)
fviz_pca_biplot(pca_df1)
Kdf1_Descent = subset(df1_PC123_Descent, select = c("PC1","PC2", "PC3"))
head(Kdf1_Descent, 5)
df1_scaled <- scale(df1_PC123_Descent)
set.seed(123)
fviz_nbclust(df1_scaled,
kmeans,
method = "wss",
k.max = 24)
fviz_nbclust(df1_scaled,
kmeans,
method = "gap_stat",
k.max = 30)
#calculate gap statistic based on number of clusters
gap_stat <- clusGap(df1_scaled,
FUN = kmeans,
nstart = 25,
K.max = 30,
B = 50)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
km <- kmeans(Kdf1_Descent, centers = 4, iter.max = 20, nstart = 20)
fviz_cluster(km, data = Kdf1_Descent)#Grafica K means
g1<- read_xls("D:/JL/Market-Index-Portafolios/APLHA/ALPHA 1/ALPHA 1.1/1.1.2Normality_Tests/Serie de datos (el bueno).xls")
library(quantmod)
getSymbols("DJI")
View(DJI)
getSymbols("^DJI")
portafolio_df1 <- c("^DJI","^HSI","^OMX20","^STI","^FTSE")
portafolio_df1 <- c("^DJI","^HSI","^OMX20","^STI","^FTSE")
getSymbols(portafolio_df1, from=as.Date("2001-01-01"), to=Sys.Date())
DJI <- Ad("^DJI")
DJI <- Ad(DJI)
View(DJI)
Symbols_ad <- NULL
for(i in portafolio_df1){
assign(paste0("Ad_", i), Ad(get(i)))
Symbols_ad <- c(Symbols_ad, paste0("Ad_",i))
}
