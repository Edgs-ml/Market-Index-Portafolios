"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric"))
names(indices)[names(indices) == '...1'] <- 'Date'
indices <- indices[-1,]
indices <- na.omit(indices)
indices <- column_to_rownames(indices, loc = 1)
indices <- round(indices, digits = 2)
indices <- as.xts(indices)
new_names <- c("United States", "Australia", "India", "Italy", "Mexico",
"Russian Federation", "Saudi Arabia", "Spain", "Canada", "China",
"France", "Germany","Japan", "Korea, Rep", "Netherlands",
"Switzerland", "United Kingdom", "Brazil", "South Africa")
colnames(indices) <- new_names
View(indices)
calculate_column_means <- function(matrix_data) {
column_means <- colMeans(matrix_data)
return(column_means)
}
calculate_column_means(k3c2_matrix)
calculate_column_pdf <- function(matrix_data) {
column_pdf <- apply(matrix_data, 2, function(col) dnorm(col, mean(col), sd(col), length(col)))
return(column_pdf)
}
calculate_column_pdf(indices)
create_base_norm_data <- function(matrix_data) {
col_names <- colnames(matrix_data)
column_pdf <- apply(matrix_data, 2, function(col) dnorm(col, mean(col), sd(col), length(col)))
base_norm_df <- data.frame(t(column_pdf))
colnames(base_norm_df) <- col_names
rownames(base_norm_df) <- "base.norm"
return(base_norm_df)
}
create_base_norm_data(indices)
create_base_norm_data <- function(matrix_data) {
col_names <- colnames(matrix_data)
column_pdf <- apply(matrix_data, 2, function(matrix_data) dnorm(matrix_data, mean(matrix_data), sd(matrix_data), length(matrix_data)))
base_norm_df <- data.frame(t(column_pdf))
colnames(base_norm_df) <- col_names
rownames(base_norm_df) <- "base.norm"
return(base_norm_df)
}
create_base_norm_data(indices)
column_pdf <- apply(matrix_data, 2, function(col) dnorm(col, mean(col), sd(col), length(col)))
apply(matrix_data, 2, function(col) dnorm(col, mean(col), sd(col), length(col)))
#from_date <- as.Date("2003-01-08")  # Specify the starting date and time
to_date <- as.POSIXct("2020-02-20")    # Specify the ending date and time
indices_pre.pandemia <- indices[index(indices) <= to_date]
View(indices_pre.pandemia)
tail(indices_pre.pandemia)
#from_date <- as.Date("2003-01-08")  # Specify the starting date and time
to_pre.crisis.to.pre.pandemic <- as.POSIXct("2020-02-27")    # Specify the ending date and time
indices_pre.crisis.to.pre.pandemic <- indices[index(indices) <= to_date]
View(indices_pre.crisis.to.pre.pandemic)
to_pre.crisis <- as.POSIXct("2007-06-30")
indices_pre.crisis.to.pre.pandemic <- indices[index(indices) <= to_pre.crisis]
indices_pre.crisis <- indices[index(indices) <= to_pre.crisis]
View(indices_pre.crisis)
#from_date <- as.Date("2003-01-08")  # Specify the starting date and time
to_pre.crisis.to.pre.pandemic <- as.POSIXct("2020-02-27")
indices_pre.crisis.to.pre.pandemic <- indices[index(indices) <= to_pre.crisis.to.pre.pandemic]
from_pos-crisis <- as.POSIXct("2011-06-30")
from_pos.crisis <- as.POSIXct("2011-06-30")
to_pre.pandemic <- as.POSIXct("2020-02-27")
indices_pos.crisis_pre.pandemic <- indices[index(indices) >= from_pos.crisis & index(indices) <= to_pre.pandemic]
View(indices_pos.crisis_pre.pandemic)
# pre pandemia
to_pre.crisis.to.pre.pandemic <- as.POSIXct("2020-02-27")
indices_pre.crisis.to.pre.pandemic <- indices[index(indices) <= to_pre.crisis.to.pre.pandemic]
# pre crisis financiera
to_pre.crisis <- as.POSIXct("2007-06-30")
indices_pre.crisis <- indices[index(indices) <= to_pre.crisis]
# entre crisis y crisis
from_pos.crisis <- as.POSIXct("2011-06-30")
to_pre.pandemic <- as.POSIXct("2020-02-27")
indices_pos.crisis_pre.pandemic <- indices[index(indices) >= from_pos.crisis & index(indices) <= to_pre.pandemic]
# pandemic
from_pandemic <- as.POSIXct("2020-02-27")
to_pandemic <- as.POSIXct("2023-04-09")
indices_pandemic <- indices[index(indices) >= from_pandemic & index(indices) <= to_pandemic]
# pos pandemic
from_pos.pandemic <- as.POSIXct("2023-04-10")
indices_pos.pandemic <- indices[index(indices) >= from_pos.pandemic]
# pre pandemia
to_pre.crisis.to.pre.pandemic <- as.POSIXct("2020-02-27")
indices_pre.crisis.to.pre.pandemic <- indices[index(indices) <= to_pre.crisis.to.pre.pandemic]
indices_pre.crisis.to.pre.pandemic_scale <- scale(indices_pre.crisis.to.pre.pandemic)
# pre crisis financiera
to_pre.crisis <- as.POSIXct("2007-06-30")
indices_pre.crisis <- indices[index(indices) <= to_pre.crisis]
indices_pre.crisis_scale <- scale(indices_pre.crisis)
# entre crisis y crisis
from_pos.crisis <- as.POSIXct("2011-06-30")
to_pre.pandemic <- as.POSIXct("2020-02-27")
indices_pos.crisis_pre.pandemic <- indices[index(indices) >= from_pos.crisis & index(indices) <= to_pre.pandemic]
indices_pos.crisis_pre.pandemic_scale <- scale(indices_pos.crisis_pre.pandemic)
# pandemic
from_pandemic <- as.POSIXct("2020-02-27")
to_pandemic <- as.POSIXct("2023-04-09")
indices_pandemic <- indices[index(indices) >= from_pandemic & index(indices) <= to_pandemic]
indices_pandemic_scale <- scale(indices_pandemic)
# pos pandemic
from_pos.pandemic <- as.POSIXct("2023-04-10")
indices_pos.pandemic <- indices[index(indices) >= from_pos.pandemic]
indices_pos.pandemic_scale <- scale(indices_pos.pandemic)
plot(indices_pos.pandemic_scale)
# kec1 pre pandemia
k3c1_matrix_pre.crisis <- indices_pre.crisis[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
k3c1_matrix_pre.crisis_scaled <- scale(k3c1_matrix_pre.crisis)
# k3c2 pandemic
k3c2_matrix_pandemic <- indices_pandemic[,c("Australia", "India", "Italy", "Mexico", "Russian Federation", "Saudi Arabia", "Spain")]
View(k3c2_matrix)
View(k3c2_matrix_pandemic)
k3c2 <- c("Australia", "India", "Italy", "Mexico", "Russian Federation",
"Saudi Arabia", "Spain")
# General
k3c2_matrix <- indices[,c("Australia", "India", "Italy", "Mexico",
"Russian Federation", "Saudi Arabia", "Spain")]
k3c2_matrix_scale <- scale(k3c2_matrix)
# k3c2 pre crisis
k3c2_matrix_pre.crisis <- indices_pre.crisis[,c("Australia", "India", "Italy", "Mexico", "Russian Federation", "Saudi Arabia", "Spain")]
# k3c2 between crisis and crisis
k3c2_matrix_pos.crisis_pre.pandemic <- indices_pos.crisis_pre.pandemic[,c("Australia", "India", "Italy", "Mexico",
"Russian Federation", "Saudi Arabia", "Spain")]
# k3c2 pandemic
k3c2_matrix_pandemic <- indices_pandemic[,c("Australia", "India", "Italy", "Mexico", "Russian Federation", "Saudi Arabia", "Spain")]
# k3c2 pos pandemic
k3c2_matrix_pos.pandemic <- indices_pos.pandemic[,c("Australia", "India", "Italy", "Mexico", "Russian Federation", "Saudi Arabia", "Spain")]
# pos pandemic
k3c1_matrix_pos.pandemic <- indices_pos.pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
View(k3c1_matrix_pos.pandemic)
# pandemic
k3c1_matrix_pandemic <- indices_pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
# k3c1 entre crisis y crisis
k3c1_matrix_pos.crisis_pre.pandemic <- indices_pos.crisis_pre.pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
k3c1 <- c("Canada", "China", "France", "Germany",
"Japan", "Korea, Rep", "Netherlands", "Switzerland",
"United Kingdom", "United States")
# Generral Time Frame
k3c1_matrix <- indices[,c("Canada", "China", "France", "Germany",
"Japan", "Korea, Rep", "Netherlands", "Switzerland",
"United Kingdom", "United States")]
# k3c1 pre crisis
k3c1_matrix_pre.crisis <- indices_pre.crisis[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
# k3c1 between crisis and crisis
k3c1_matrix_pos.crisis_pre.pandemic <- indices_pos.crisis_pre.pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
# pandemic
k3c1_matrix_pandemic <- indices_pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
# pos pandemic
k3c1_matrix_pos.pandemic <- indices_pos.pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
ks.univariate.test.function <- function(serie, cdf){
vector.series <- as.vector(serie)
ks.test(vector.series, cdf)
}
apply(indices,
MARGIN = 2,
FUN = ks.univariate.test.function,
cdf = "pnorm")
apply(indices,
MARGIN = 2,
FUN = ks.univariate.test.function,
cdf = "pnig")
ks.univariate.test.function <- function(serie, cdf){
vector.series <- as.vector(serie)
ks.test(vector.series, cdf)
}
ks.univ.norm_indices <- apply(indices,
MARGIN = 2,
FUN = ks.univariate.test.function,
cdf = "pnorm")
ks.univ.nig_indices <- apply(indices,
MARGIN = 2,
FUN = ks.univariate.test.function,
cdf = "pnig")
View(ks.univ.norm_indices)
## Pruba de Kormogorov-Smirnov
ks.univ.nig_indices
#Parametros de la NIG
NIG_United.States <- nigFit(indices$`United States`)
#Agrupar parametros en un objeto
a <- NIG_United.States@fit[["par"]]
a <- data.frame(t(a))
#NIG aleatoria con parametors univariados de nuestra serie
r <- rnig(len_United.States,
alpha = a$alpha,
beta = a$beta,
delta = a$delta,
mu = a$mu)
plot(density(r),
col="black",
main="NIG Univariada",
sub="SP index")
#Pruba de Kormogorov univariada para NIG
ks.test(as.vector(indices$`United States`), "pnorm")
Specs_Port_Norm_indices <- portfolio.spec(indices)
Specs_Port_Norm_indices <- portfolio.spec(indices)
##### Add Constraints #####
Specs_Port_Norm_indices <- add.constraint(Specs_Port_Norm_indices,
type = "full_investment")
Specs_Port_Norm_indices <- add.constraint(Specs_Port_Norm_indices,
type = "long_only")
##### Add Objective #####
Specs_Port_Norm_indices <- add.objective(Specs_Port_Norm_indices,
type = "risk",
name = "StdDev")
Specs_Port_Norm_indices <- add.objective(Specs_Port_Norm_indices,
type = 'return',
name = 'mean')
Specs_Port_Norm_indices
##### Optimization #####
Optimized_Port_Norm_indices <- optimize.portfolio(indices,
Specs_Port_Norm_indices,
trace = TRUE)
library(tidyverse)
library(readxl)
library(textshape) #"Tools for Reshaping Text". Usado en columns_to_rownames
library(broom)
library(plotly)
library(scales)
library(caTools)
library(caret)
library(cluster)
library(factoextra) #Para graficar K-Means y PCA
library(psych) #Usado por su funsión de crar matices de correlaciones de colores
library(stats) #Para hacer el PCA
library(naniar) #Para limpiar las bases de datos
library(fBasics) #Analisis estadistico
library(PerformanceAnalytics)
library(statmod)
library(knitr)
library(stargazer)
library(kableExtra)
library(ggpubr)
library(ggdist)
library(ggExtra)
library(ggbeeswarm)
library(aTSA) #Raiz Unitaria
library(tseries) #Raiz Unitaria
library(QuantPsyc) #Pruba multivariada
library(ghyp) #Para hacer momentos estadisticos de la NIG
library(quantmod) #Para descargar datos
library(cramer) #Para la prueba de cramer
library(PortfolioAnalytics)
library(DEoptim)
library(tidyquant)
library(NbClust)
library(dendextend)
library(xts)
library(zoo)
df <- read_excel("APLHA/ALPHA_1/ALPHA_1.1/1.1.1PCA_Codes/Criterios-Unificado (Datos para PCA).xlsx")
df <- df[,-6]
df_plot <- df #Data Frame para hacer gráficas descriptivas
df <- column_to_rownames(df, loc = 1)
df_plot <- cbind(df_plot[,-5], log10(df$GDP))
colnames(df_plot)[5] = "GDP"
df <- column_to_rownames(df_plot,
loc = 1)
df <- read_excel("APLHA/ALPHA_1/ALPHA_1.1/1.1.1PCA_Codes/Criterios-Unificado (Datos para PCA).xlsx")
df <- df[,-6]
df_plot <- df #Data Frame para hacer gráficas descriptivas
df <- column_to_rownames(df, loc = 1)
df_plot <- cbind(df_plot[,-5], log10(df$GDP))
colnames(df_plot)[5] = "GDP"
df <- column_to_rownames(df_plot,
loc = 1)
pca_df <- prcomp(df,
center = TRUE,
scale. = TRUE)
summary(pca_df)
#biplot(pca_df)
fviz_pca_biplot(pca_df)
fviz_contrib(pca_df,
choice = "var")
fviz_contrib(pca_df,
choice = "ind")
fviz_screeplot(pca_df)
df_PC1234 <- cbind(df,
as.data.frame(pca_df$x)) %>%
arrange(desc(PC1))
View(df_PC1234)
df_PC12 <- as.data.frame(pca_df$x)
df_PC12 <- df_PC12[,1:2]
View(df_PC12)
NbClust(df_PC12,
distance = "euclidean",
method = "kmeans")
kmean1_df_PC12 <- kmeans(df_PC12,
centers = 3,
iter.max = 50) #creamos objeto de kmeans con la df principal
fviz_cluster(kmean1_df_PC12,
data = df_PC12)
df_K1C1 <- cbind(df_PC12,
as.data.frame(kmean1_df_PC12$cluster))
colnames(df_K1C1)[3] = "K1C1"
df_K1C1 <- df_K1C1 %>%
filter(K1C1==3)
df_K1C1 <- df_K1C1[,-3]
View(df_K1C1)
#---- 2do kmeans
NbClust(df_K1C1,
distance = "euclidean",
method = "kmeans")
kmean2_df_PC12 <- kmeans(df_K1C1,
centers = 2,
iter.max = 50)
fviz_cluster(kmean2_df_PC12,
data = df_K1C1)
df_K2C2 <- cbind(df_K1C1,
as.data.frame(kmean2_df_PC12$cluster))
colnames(df_K2C2)[3] = "K2C2"
df_K2C2 <- df_K2C2 %>%
filter(K2C2==2)
df_K2C2 <- df_K2C2[,-3]
View(df_K2C2)
#---- 3er kmeans
kmean3_df_PC12 <- kmeans(df_K2C2,
centers = 2,
iter.max = 50)
fviz_cluster(kmean3_df_PC12,
data = df_K2C2)
df_K3C2 <- cbind(df_K2C2,
as.data.frame(kmean3_df_PC12$cluster))
colnames(df_K3C2)[3] = "K3C2"
df_K3C2 <- df_K3C2 %>%
filter(K3C2==2)
df_K3C2 <- df_K3C2[,-3]
View(df_K3C2)
df_K3C1 <- cbind(df_K2C2,
as.data.frame(kmean3_df_PC12$cluster))
colnames(df_K3C1)[3] = "K3C1"
df_K3C1 <- df_K3C1 %>%
filter(K3C1==1)
df_K3C1 <- df_K3C1[,-3]
View(df_K3C1)
# Indices de capital de los paises, bajados de Bloomberg
indices <- read_excel("Indices_km.xlsx",
sheet = "Hoja1",
col_types = c("date",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric"))
names(indices)[names(indices) == '...1'] <- 'Date'
indices <- indices[-1,]
indices <- na.omit(indices)
indices <- column_to_rownames(indices, loc = 1)
indices <- round(indices, digits = 2)
indices <- as.xts(indices)
new_names <- c("United States", "Australia", "India", "Italy", "Mexico",
"Russian Federation", "Saudi Arabia", "Spain", "Canada", "China",
"France", "Germany","Japan", "Korea, Rep", "Netherlands",
"Switzerland", "United Kingdom", "Brazil", "South Africa")
colnames(indices) <- new_names
View(indices)
class(indices)
indices <- indices
indices_scale <- scale(indices)
plot(indices_scale)
#--------pre pandemia
to_pre.crisis.to.pre.pandemic <- as.POSIXct("2020-02-27")
indices_pre.crisis.to.pre.pandemic <- indices[index(indices) <= to_pre.crisis.to.pre.pandemic]
indices_pre.crisis.to.pre.pandemic_scale <- scale(indices_pre.crisis.to.pre.pandemic)
#--------pre crisis financiera
to_pre.crisis <- as.POSIXct("2007-06-30")
indices_pre.crisis <- indices[index(indices) <= to_pre.crisis]
indices_pre.crisis_scale <- scale(indices_pre.crisis)
#--------entre crisis y crisis
from_pos.crisis <- as.POSIXct("2011-06-30")
to_pre.pandemic <- as.POSIXct("2020-02-27")
indices_pos.crisis_pre.pandemic <- indices[index(indices) >= from_pos.crisis & index(indices) <= to_pre.pandemic]
indices_pos.crisis_pre.pandemic_scale <- scale(indices_pos.crisis_pre.pandemic)
#--------pandemic
from_pandemic <- as.POSIXct("2020-02-27")
to_pandemic <- as.POSIXct("2023-04-09")
indices_pandemic <- indices[index(indices) >= from_pandemic & index(indices) <= to_pandemic]
indices_pandemic_scale <- scale(indices_pandemic)
#--------pos pandemic
from_pos.pandemic <- as.POSIXct("2023-04-10")
indices_pos.pandemic <- indices[index(indices) >= from_pos.pandemic]
indices_pos.pandemic_scale <- scale(indices_pos.pandemic)
#--------pre pandemia - indices_pre.crisis.to.pre.pandemic
to_pre.crisis.to.pre.pandemic <- as.POSIXct("2020-02-27")
indices_pre.crisis.to.pre.pandemic <- indices[index(indices) <= to_pre.crisis.to.pre.pandemic]
indices_pre.crisis.to.pre.pandemic_scale <- scale(indices_pre.crisis.to.pre.pandemic)
#--------pre crisis financiera - indices_pre.crisis
to_pre.crisis <- as.POSIXct("2007-06-30")
indices_pre.crisis <- indices[index(indices) <= to_pre.crisis]
indices_pre.crisis_scale <- scale(indices_pre.crisis)
#--------entre crisis y crisis - indices_pos.crisis_pre.pandemic
from_pos.crisis <- as.POSIXct("2011-06-30")
to_pre.pandemic <- as.POSIXct("2020-02-27")
indices_pos.crisis_pre.pandemic <- indices[index(indices) >= from_pos.crisis & index(indices) <= to_pre.pandemic]
indices_pos.crisis_pre.pandemic_scale <- scale(indices_pos.crisis_pre.pandemic)
#--------pandemic - indices_pandemic
from_pandemic <- as.POSIXct("2020-02-27")
to_pandemic <- as.POSIXct("2023-04-09")
indices_pandemic <- indices[index(indices) >= from_pandemic & index(indices) <= to_pandemic]
indices_pandemic_scale <- scale(indices_pandemic)
#--------pos pandemic - indices_pos.pandemic
from_pos.pandemic <- as.POSIXct("2023-04-10")
indices_pos.pandemic <- indices[index(indices) >= from_pos.pandemic]
indices_pos.pandemic_scale <- scale(indices_pos.pandemic)
k3c1 <- c("Canada", "China", "France", "Germany",
"Japan", "Korea, Rep", "Netherlands", "Switzerland",
"United Kingdom", "United States")
#--------Generral Time Frame - k3c1_matrix
k3c1_matrix <- indices[,c("Canada", "China", "France", "Germany",
"Japan", "Korea, Rep", "Netherlands", "Switzerland",
"United Kingdom", "United States")]
#--------k3c1 pre crisis - k3c1_matrix_pre.crisis
k3c1_matrix_pre.crisis <- indices_pre.crisis[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
#--------k3c1 between crisis and crisis - indices_pos.crisis_pre.pandemic
k3c1_matrix_pos.crisis_pre.pandemic <- indices_pos.crisis_pre.pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
#--------pandemic - k3c1_matrix_pandemic
k3c1_matrix_pandemic <- indices_pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
#--------pos pandemic - k3c1_matrix_pos.pandemic
k3c1_matrix_pos.pandemic <- indices_pos.pandemic[,c("Canada", "China", "France", "Germany", "Japan", "Korea, Rep", "Netherlands", "Switzerland", "United Kingdom", "United States")]
k3c2 <- c("Australia", "India", "Italy", "Mexico", "Russian Federation",
"Saudi Arabia", "Spain")
#--------General - k3c2_matrix
k3c2_matrix <- indices[,c("Australia", "India", "Italy", "Mexico",
"Russian Federation", "Saudi Arabia", "Spain")]
k3c2_matrix_scale <- scale(k3c2_matrix)
#--------k3c2 pre crisis - k3c2_matrix_pre.crisis
k3c2_matrix_pre.crisis <- indices_pre.crisis[,c("Australia", "India", "Italy", "Mexico", "Russian Federation", "Saudi Arabia", "Spain")]
#--------k3c2 between crisis and crisis - k3c2_matrix_pos.crisis_pre.pandemic
k3c2_matrix_pos.crisis_pre.pandemic <- indices_pos.crisis_pre.pandemic[,c("Australia", "India", "Italy", "Mexico",
"Russian Federation", "Saudi Arabia", "Spain")]
#--------k3c2 pandemic - k3c2_matrix_pandemic
k3c2_matrix_pandemic <- indices_pandemic[,c("Australia", "India", "Italy", "Mexico", "Russian Federation", "Saudi Arabia", "Spain")]
#--------k3c2 pos pandemic - k3c2_matrix_pos.pandemic
k3c2_matrix_pos.pandemic <- indices_pos.pandemic[,c("Australia", "India", "Italy", "Mexico", "Russian Federation", "Saudi Arabia", "Spain")]
#--------BRICS pos pandemic -
brics_matrix_indices_pos.pandemic <- indices_pos.pandemic[,c("Brazil", "Russian Federation", "India", "China", "South Africa")]
brics <- c("Brazil", "Russian Federation", "India", "China", "South Africa")
#--------General - brics_matrix
brics_matrix <- indices[,c("Brazil", "Russian Federation", "India",
"China", "South Africa")]
# BRICS pre crisis - brics_matrix_indices_pre.crisis
brics_matrix_indices_pre.crisis <- indices_pre.crisis[,c("Brazil", "Russian Federation", "India", "China", "South Africa")]
#--------BRICS between crisis and crisis - brics_matrix_indices_pos.crisis_pre.pandemic
brics_matrix_indices_pos.crisis_pre.pandemic <- indices_pos.crisis_pre.pandemic[,c("Brazil", "Russian Federation", "India", "China", "South Africa")]
#--------BRICS pandemic - brics_matrix_indices_pandemic
brics_matrix_indices_pandemic <- indices_pandemic[,c("Brazil", "Russian Federation", "India", "China", "South Africa")]
#--------BRICS pos pandemic - brics_matrix_indices_pos.pandemic
brics_matrix_indices_pos.pandemic <- indices_pos.pandemic[,c("Brazil", "Russian Federation", "India", "China", "South Africa")]
ks.univariate.test.function <- function(serie, cdf){
vector.series <- as.vector(serie)
ks.test(vector.series, cdf)
}
#--------- KS.Test Univariada NIG
ks.univ.norm_indices <- apply(indices,
MARGIN = 2,
FUN = ks.univariate.test.function,
cdf = "pnorm")
library(tidyverse)
library(readxl)
library(textshape) #"Tools for Reshaping Text". Usado en columns_to_rownames
library(broom)
library(plotly)
library(scales)
library(caTools)
library(caret)
library(cluster)
library(factoextra) #Para graficar K-Means y PCA
library(psych) #Usado por su funsión de crar matices de correlaciones de colores
library(stats) #Para hacer el PCA
library(naniar) #Para limpiar las bases de datos
library(fBasics) #Analisis estadistico
library(PerformanceAnalytics)
library(statmod)
library(knitr)
library(stargazer)
library(kableExtra)
library(ggpubr)
library(ggdist)
library(ggExtra)
library(ggbeeswarm)
library(aTSA) #Raiz Unitaria
library(tseries) #Raiz Unitaria
library(QuantPsyc) #Pruba multivariada
library(ghyp) #Para hacer momentos estadisticos de la NIG
library(quantmod) #Para descargar datos
library(cramer) #Para la prueba de cramer
library(PortfolioAnalytics)
library(DEoptim)
library(tidyquant)
library(NbClust)
library(dendextend)
library(xts)
library(zoo)
Specs_Port_Norm_indices <- portfolio.spec(indices)
# Add Constraints #####
Specs_Port_Norm_indices <- add.constraint(Specs_Port_Norm_indices,
type = "full_investment")
Specs_Port_Norm_indices <- add.constraint(Specs_Port_Norm_indices,
type = "long_only")
# Add Objective #####
Specs_Port_Norm_indices <- add.objective(Specs_Port_Norm_indices,
type = "risk",
name = "StdDev")
Specs_Port_Norm_indices <- add.objective(Specs_Port_Norm_indices,
type = 'return',
name = 'mean')
Specs_Port_Norm_indices
# Optimization #####
Optimized_Port_Norm_indices <- optimize.portfolio(indices,
Specs_Port_Norm_indices,
trace = TRUE)
View(indices)
tail(indices)
