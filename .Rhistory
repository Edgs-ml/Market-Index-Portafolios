data = coordinates_map)
#List of countries by cluster
k_map_df <- as.data.frame(k_map$cluster)
k_map1 <- k_map_df %>%
arrange(`k_map$cluster`)
k_map1 <- k_map_df %>%
subset(`k_map$cluster`==3)
head(k_map1)
View(k_map_df)
View(k_map1)
k_map1 <- k_map_df %>%
subset(`k_map$cluster`==2)
head(k_map1)
k_map <- kmeans(coordinates_map, 4)
fviz_cluster(k_map,
data = coordinates_map)
#List of countries by cluster
k_map_df <- as.data.frame(k_map$cluster)
k_map1 <- k_map_df %>%
arrange(`k_map$cluster`)
k_map1 <- k_map_df %>%
subset(`k_map$cluster`==2)
head(k_map1)
View(coordinates_map)
View(k_map)
View(k_map_df)
typeof(coordinates_map)
typeof(k_map_df)
k_map_clusters2 <- cbind(coordinates_map,k_map_df$`k_map$cluster`)
View(k_map_clusters2)
k_map_clusters2 <- cbind(coordinates_map,cluster=k_map_df$`k_map$cluster`)
View(k_map_clusters2)
k_map_clusters3 <- k_map_clusters2 %>%
subset(cluster==2)
View(k_map_clusters3)
k_map_clusters3 <- k_map_clusters3[,-3]
View(k_map_clusters3)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "wss",
k.max = 24)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "gap_stat",
k.max = 30,
print.summary=TRUE)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "gap_stat",
k.max = 24)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "gap_stat",
k.max = 30,
print.summary=TRUE)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "gap_stat",
k.max = 24,
print.summary=TRUE)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "wss",
k.max = 24)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "gap_stat",
k.max = 24,
print.summary=TRUE)
k_map2 <- kmeans(k_map_clusters3, 4)
fviz_cluster(k_map2,
data = k_map_clusters3)
k_map2 <- kmeans(k_map_clusters3, 3)
fviz_cluster(k_map2,
data = k_map_clusters3)
View(k_map2)
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`)
fviz_cluster(k_map2,
data = k_map_clusters3)
k_map2 <- kmeans(k_map_clusters3, 3)
fviz_cluster(k_map2,
data = k_map_clusters3)
k_map2 <- k_map_df2 %>%
subset(`k_map2$cluster`==1)
head(k_map2)
view(k_map2)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`)
k_map2 <- k_map_df2 %>%
subset(`k_map2$cluster`==1)
head(k_map2)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`)
k_map2 <- k_map_df2 %>%
subset(`k_map2$cluster`==1)
----
k_map_df3 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
subset(`k_map2$cluster`==1)
k_map3 <- k_map_df3 %>%
arrange(`k_map2$cluster`)
k_map2 <- k_map_df2 %>%
subset(`k_map2$cluster`==1)
k_map2 <- k_map_df2 %>%
subset(`k_map2$cluster`==1)
k_map_df3 <- as.data.frame(k_map2$cluster)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`)
k_map2 <- k_map_df2 %>%
subset(`k_map2$cluster`==1)
k_map_df3 <- as.data.frame(k_map2$cluster)
k_map3 <- k_map_df3 %>%
arrange(`k_map2$cluster`)
View(k_map_clusters3)
View(k_map_clusters2)
View(k_map_df)
View(k_map)
View(k_map1)
k_map <- kmeans(coordinates_map, 4)
fviz_cluster(k_map,
data = coordinates_map)
#List of countries by cluster
k_map_df <- as.data.frame(k_map$cluster)
k_map1 <- k_map_df %>%
arrange(`k_map$cluster`) %>%
subset(`k_map$cluster`==2)
head(k_map1)
View(k_map1))
View(k_map1)
k_map_clusters2 <- cbind(coordinates_map,
cluster = k_map_df$`k_map$cluster`)
k_map_clusters3 <- k_map_clusters2 %>%
subset(cluster==2)
k_map_clusters3 <- k_map_clusters3[,-3]
View(k_map_clusters3)
View(k_map1)
fviz_cluster(k_map,
data = coordinates_map)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "wss",
k.max = 24)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "gap_stat",
k.max = 24,
print.summary=TRUE)
k_map2 <- kmeans(k_map_clusters3, 3)
fviz_cluster(k_map2,
data = k_map_clusters3)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
k_map_df2 <- as.data.frame(k_map2$cluster)
View(k_map_df2)
fviz_cluster(k_map2,
data = k_map_clusters3)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==1)
#---
k_map3 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==2)
head(k_map2)
View(k_map3)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==1)
#---
k_map3 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==2)
View(k_map2)
View(k_map3)
View(k_map3)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==1)
#---
k_map3 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==2)
View(k_map2)
View(k_map3)
View(k_map1)
k_map_clusters3 <- cbind(coordinates_map,
cluster = k_map_df$`k_map$cluster`) %>%
k_map_clusters2 %>%
subset(cluster==2)
k_map_clusters3 <- cbind(coordinates_map,
cluster = k_map_df$`k_map$cluster`) %>%
subset(cluster==2)
k_map_clusters3 <- k_map_clusters3[,-3]
fviz_nbclust(k_map_clusters3,
kmeans,
method = "wss",
k.max = 24)
fviz_nbclust(k_map_clusters3,
kmeans,
method = "gap_stat",
k.max = 24,
print.summary=TRUE)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==1)
#---
k_map3 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==2)
View(k_map2)
View(k_map3)
View(k_map2)
View(k_map3)
Equity1 <- c( "^AXJO", "^ATX","^BFX","^GSPTSE","000001.SS", "^OMXT", "^OMXH25", "^FCHI",
"^FCHI", "^GDAXI", "^ISEQ", "TA35.TA", "^N225", "FBMEMAS.FGI", "^AEX", "^IBEX",
"^SSMI", "DUAE.L")
getSymbols(Equity1, from=as.Date("2018-01-01"), to=Sys.Date())
Equity1_ad <- NULL
for(i in Equity1){
assign(paste0("Ad_",i), Ad(get(i)))
Equity1_ad <- c(Equity1_ad, paste0("Ad_",i))
}
Equity1 <- c( "^AXJO", "^ATX","^BFX","^GSPTSE","000001.SS", "^OMXT", "^OMXH25", "^FCHI",
"^FCHI", "^GDAXI", "^ISEQ", "TA35.TA", "^N225", "FBMEMAS.FGI", "^AEX", "^IBEX",
"^SSMI", "DUAE.L")
getSymbols(Equity1, from=as.Date("2018-01-01"), to=Sys.Date())
Equity1_ad <- NULL
for(i in Equity1){
assign(paste0("Ad_",i), Ad(get(i)))
Equity1_ad <- c(Equity1_ad, paste0("Ad_",i))
}
Equity1 <- c("^AXJO", "^ATX","^BFX","^GSPTSE","000001.SS", "^OMXT", "^OMXH25", "^FCHI",
"^FCHI", "^GDAXI", "^ISEQ", "TA35.TA", "^N225", "FBMEMAS.FGI", "^AEX", "^IBEX",
"^SSMI", "DUAE.L")
getSymbols(Equity1, from=as.Date("2018-01-01"), to=Sys.Date())
Equity1_ad <- NULL
for(i in Equity1){
assign(paste0("Ad_",i), Ad(get(i)))
Equity1_ad <- c(Equity1_ad, paste0("Ad_",i))
}
tq_get(c("^AXJO", "^ATX","^BFX","^GSPTSE","000001.SS", "^OMXT", "^OMXH25", "^FCHI",
"^FCHI", "^GDAXI", "^ISEQ", "TA35.TA", "^N225", "FBMEMAS.FGI", "^AEX", "^IBEX",
"^SSMI", "DUAE.L"),
get = "stock.prices",
complete_cases = TRUE)
equit1 <- tq_get(c("^AXJO", "^ATX","^BFX","^GSPTSE","000001.SS", "^OMXT", "^OMXH25", "^FCHI",
"^FCHI", "^GDAXI", "^ISEQ", "TA35.TA", "^N225", "FBMEMAS.FGI", "^AEX", "^IBEX",
"^SSMI", "DUAE.L"),
get = "stock.prices",
complete_cases = TRUE)
View(equit1)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
library(tidyverse)
library(readxl)
library(textshape) #"Tools for Reshaping Text". Usado en columns_to_rownames
library(broom)
library(plotly)
library(scales)
library(caTools)
library(caret)
library(cluster)
library(factoextra) #Para graficar K-Means y PCA
library(psych) #Usado por su funsiÃ³n de crar matices de correlaciones de colores
library(stats) #Para hacer el PCA
library(naniar) #Para limpiar las bases de datos
library(fBasics) #Analisis estadistico
library(PerformanceAnalytics)
library(statmod)
library(knitr)
library(stargazer)
library(kableExtra)
library(ggpubr)
library(ggdist)
library(ggExtra)
library(ggbeeswarm)
library(aTSA) #Raiz Unitaria
library(tseries) #Raiz Unitaria
library(QuantPsyc) #Pruba multivariada
library(ghyp) #Para hacer momentos estadisticos de la NIG
library(quantmod) #Para descargar datos
library(cramer) #Para la prueba de cramer
library(PortfolioAnalytics)
library(DEoptim)
library(tidyquant)
k_map_clusters4 <- cbind(coordinates_map,
cluster = k_map_df$`k_map$cluster`) %>%
k_map_clusters2 %>%
subset(cluster==2)
k_map_clusters4 <- cbind(coordinates_map,
cluster = k_map_df$`k_map$cluster`) %>%
subset(cluster==2)
k_map_clusters4 <- k_map_clusters3[,-3]
View(k_map_clusters4)
k_map4 <- kmeans(k_map_clusters4, 2)
fviz_cluster(k_map4,
data = k_map_clusters4)
#List of countries by cluster
k_map_df4 <- as.data.frame(k_map4$cluster)
k_map4 <- k_map_df4 %>%
arrange(`k_map3$cluster`) %>%
subset(`k_map3$cluster`==1)
View(k_map2)
View(k_map3)
View(k_map1)
k_map <- kmeans(coordinates_map, 4)
fviz_cluster(k_map,
data = coordinates_map)
#List of countries by cluster
k_map_df <- as.data.frame(k_map$cluster)
k_map1 <- k_map_df %>%
subset(`k_map$cluster`==2)
View(k_map1)
View(coordinates_map)
View(k_map_df)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==1)
#---
k_map3 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==2)
View(k_map2)
View(k_map3)
View(k_map_clusters3)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==c(1,2))
View(k_map_df2)
k_map_clusters4 <- cbind(k_map_clusters3,
cluster = k_map_df2$`k_map2$cluster`)
View(k_map_clusters4)
View(k_map_df4)
k_map_clusters5 <- k_map_clusters4 %>%
arrange(`k_map3$cluster`) %>%
subset(`k_map3$cluster`==1)
k_map_clusters5 <- k_map_clusters4 %>%
arrange(cluster) %>%
subset(cluster==1)
View(k_map_clusters5)
#---
k_map_clusters6 <- k_map_clusters4 %>%
arrange(cluster) %>%
subset(cluster==2)
k_map_clusters5 <- k_map_clusters5[,-3]
k_map_clusters6 <- k_map_clusters5[,-3]
View(k_map_clusters6)
Viewk_map_clusters4)
View(k_map_clusters4)
k_map5 <- kmeans(k_map_clusters5, 2)
fviz_cluster(k_map5,
data = k_map_clusters5)
fviz_cluster(k_map4,
data = k_map_clusters4)
k_map5 <- kmeans(k_map_clusters5, 2)
fviz_cluster(k_map5,
data = k_map_clusters5)
k_map6 <- kmeans(k_map_clusters6, 2)
fviz_cluster(k_map6,
data = k_map_clusters6)
k_map_clusters5 <- k_map_clusters4 %>%
arrange(cluster) %>%
subset(cluster==1)
k_map_clusters5 <- k_map_clusters5[,-3]
k_map5 <- kmeans(k_map_clusters5, 2)
fviz_cluster(k_map5,
data = k_map_clusters5)
k_map_clusters6 <- k_map_clusters4 %>%
subset(cluster==2)
k_map_clusters6 <- k_map_clusters5[,-3]
View(k_map_clusters6)
k_map6 <- kmeans(k_map_clusters6, 2)
fviz_cluster(k_map6,
data = k_map_clusters6)
k_map_clusters5 <- k_map_clusters4 %>%
subset(cluster==1)
k_map_clusters5 <- k_map_clusters5[,-3]
View(k_map_clusters5)
k_map5 <- kmeans(k_map_clusters5, 2)
fviz_cluster(k_map5,
data = k_map_clusters5)
View(map)
View(pca_df1)
View(map)
Viewk_map_clusters4
View(k_map_clusters4)
k_map4 <- kmeans(k_map_clusters4, 2)
fviz_cluster(k_map4,
data = k_map_clusters4)
k_map <- kmeans(coordinates_map, 4)
fviz_cluster(k_map,
data = coordinates_map)
#List of countries by cluster
k_map_df <- as.data.frame(k_map$cluster)
k_map1 <- k_map_df %>%
arrange(`k_map$cluster`) %>%
subset(`k_map$cluster`==2)
View(k_map1)
library(tidyverse)
library(tidyverse)
library(readxl)
library(textshape) #"Tools for Reshaping Text". Usado en columns_to_rownames
library(broom)
library(plotly)
library(scales)
library(caTools)
library(caret)
library(cluster)
library(factoextra) #Para graficar K-Means y PCA
library(psych) #Usado por su funsiÃ³n de crar matices de correlaciones de colores
library(stats) #Para hacer el PCA
library(naniar) #Para limpiar las bases de datos
library(fBasics) #Analisis estadistico
library(PerformanceAnalytics)
library(statmod)
library(knitr)
library(stargazer)
library(kableExtra)
library(ggpubr)
library(ggdist)
library(ggExtra)
library(ggbeeswarm)
library(aTSA) #Raiz Unitaria
library(tseries) #Raiz Unitaria
library(QuantPsyc) #Pruba multivariada
library(ghyp) #Para hacer momentos estadisticos de la NIG
library(quantmod) #Para descargar datos
library(cramer) #Para la prueba de cramer
library(PortfolioAnalytics)
library(DEoptim)
library(tidyquant)
k_map <- kmeans(coordinates_map, 4)
fviz_cluster(k_map,
data = coordinates_map)
#List of countries by cluster
k_map_df <- as.data.frame(k_map$cluster)
k_map1 <- k_map_df %>%
arrange(`k_map$cluster`) %>%
subset(`k_map$cluster`==2)
View(k_map1)
k_map_clusters3 <- cbind(coordinates_map,
cluster = k_map_df$`k_map$cluster`) %>%
subset(cluster==2)
k_map_clusters3 <- k_map_clusters3[,-3]
View(k_map_clusters3)
k_map2 <- kmeans(k_map_clusters3, 2)
fviz_cluster(k_map2,
data = k_map_clusters3)
#List of countries by cluster
k_map_df2 <- as.data.frame(k_map2$cluster)
k_map2 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==1)
#---
k_map3 <- k_map_df2 %>%
arrange(`k_map2$cluster`) %>%
subset(`k_map2$cluster`==2)
View(k_map2)
View(k_map3)
k_map_clusters4 <- cbind(coordinates_map,
cluster = k_map_df$`k_map$cluster`) %>%
k_map_clusters2 %>%
subset(cluster==2)
View(k_map_df)
