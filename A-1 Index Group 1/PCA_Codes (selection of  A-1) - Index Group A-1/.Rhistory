library(readxl)#Leer excel
library(factoextra)#funcion kmeans, grafiacs de pca
library(textshape)#editar las columnas}
library(naniar)#elimina nas
library(stats)#pca
library(tidyverse)
df1 <- data.frame(read_excel("C:/Users/juanl/Desktop/paper/Bases de datos/Criterios-Unificado.xlsx"))#Carga los datos
df1<-textshape::column_to_rownames(df1,
loc=1)
df1<-(na.omit(df1))
df1$GDP<-NULL
#df1pca <- df1 [,-4]
pca_2<-prcomp(df1)
summary(pca_2)
df2 <- cbind(df1,
pca_2$x)#Agrefar pca2 por renglones
Clas<-df2 %>%
arrange(desc(PC1))
View(Clas)
library(readxl)
df<-read_excel("C:/Users/juanl/Desktop/paper/Bases de datos/Series de grupos/Charting Excel Export - Jan 21st 2022 11_27_13 pm.xls")
library(naniar)
df<-drop_na(df)
df<-read_excel("C:/Users/juanl/Desktop/paper/Bases de datos/Series de grupos/Charting Excel Export - Jan 21st 2022 11_27_13 pm.xls")
library(naniar)
df<-drop_na(df)
library(PortfolioAnalytics)
colnames(df)<-c("Fecha","SPX","OMXC","HSI","STI","FTSE","KOSPI","OMXS","MSCI","DAX")
SPX<-xts(df$SPX,as.Date(df$Fecha))
FTSE<-xts(df$FTSE,as.Date(df$Fecha))
OMXC<-xts(df$OMX,as.Date(df$Fecha))
OMXC<-xts(df$OMXC,as.Date(df$Fecha))
STI<-xts(df$STI,as.Date(df$Fecha))
HSI<-xts(df$HSI,as.Date(df$Fecha))
Sp<-xts(df$`S&P500`,as.Date(df$Fecha))
KOSPI<-xts(df$KOSPI,as.Date(df$Fecha))
OMXS<-xts(df$OMXS,as.Date(df$Fecha))
MSCI<-xts(df$MSCI,as.Date(df$Fecha))
DAX<-xts(df$DAX,as.Date(df$Fecha))
Portafolio<-merge.xts(SPX,FTSE,OMXC,STI,HSI,KOSPI,OMXS,MSCI,DAX)
Retornos<-Return.calculate(Portafolio,method = "log")[-1,]
Retornos<-data.frame(Retornos)
View(Retornos)
cor<-cor(Retornos)
View(cor)
Retornos$STI<-NULL
(Retornos$DAX,Retornos$OMXS)<-NULL
Retornos$DAX<-NULL
Retornos$OMXS<-NULL
Retornos$HSI<-NULL
cor2<-cor(Retornos)
View(cor2)
library(readxl)
library(fBasics)#Analisis estadistico
install.packages("tseries")
library(fBasics)#Analisis estadistico
library(aTSA)#Raiz Unitaria
library(tseries)#Raiz Unitaria
library(naniar)#remueve Nas
library(tidyverse)#Ya incluye read excel
library(PerformanceAnalytics)
library(textshape)
library(QuantPsyc)#Pruba multivariada de normlaidad
library(statmod)
library(ghyp)#multivariado NIG
library(cramer)#Pruba cramer NIG multivariada
g1<- read_excel("C:/Users/juanl/Desktop/paper/Correlaciones G1/Charting Excel Export - Jan 21st 2022 11_27_13 pm.xls")
colnames(g1)<-c("Fecha","SPX","OMXC""FTSE","KOSPI","MSCI")
View(g1)
#View(g1)
g1<-textshape::column_to_rownames(g1,loc=1)
View(g1)
g1<- read_excel("C:/Users/juanl/Desktop/paper/Correlaciones G1/Charting Excel Export - Jan 21st 2022 11_27_13 pm.xls")
colnames(g1)<-c("Fecha","SPX","OMXC""FTSE","KOSPI","MSCI")
colnames(g1)<-c("Fecha","SPX","OMXC","FTSE","KOSPI","MSCI")
g1<-textshape::column_to_rownames(g1,loc=1)
View(g1)
retornos<-drop_na(g1)
glimpse(g1)
retornos<-Return.calculate(g1,method = "log")
g1<- read_excel("C:/Users/juanl/Desktop/paper/Correlaciones G1/Charting Excel Export - Jan 21st 2022 11_27_13 pm.xls")
colnames(g1)<-c("Fecha","SPX","OMXC","FTSE","KOSPI","MSCI")
#View(g1)
g1<-textshape::column_to_rownames(g1,loc=1)
g1<-drop_na(g1)
retornos<-Return.calculate(g1,method = "log")
retornos<-Return.calculate(g1,method = "log")[,-1]
#retornos<-drop_na(retornos)
View(retornos)
retornos<-Return.calculate(g1,method = "log")[-1,]
#retornos<-drop_na(retornos)
View(retornos)
adf.test(retornos$SPX)
adf.test(retornos$MSCI)
#Shapiro Wilk
shapiro.test(retornos$SPX)
#Shapiro Francia
sfTest(retornos$SPX)
#Construccion de normal con parametros multivariados de la series
m<-mean(retornos$SPX)
sd<-sd(retornos$SPX)
len<-length(retornos$SPX)
basenormal<-rnorm(len,m,sd)#normal con los parametros de nuestras series
#Prubas de Kormogorov contra distribucion normal, creada con paramaetros de nuestra serie
ks.test(retornos$SPX,basenormal)
ks.test(retornos$OMXC,basenormal)
mult.norm(retornos)$mult.test
plot(density(retornos$SPX),col="blue",ylim=c(0,60), main="Distribuciones contra normal")+
lines(density(retornos$OMXC),
col="green")+
lines(density(retornos$FTSE),
col="orange")+
lines(density(retornos$KOSPI),
col="black")+
lines(density(retornos$MSCI),
col="grey")+
lines(density(basenormal),
col="red")
#Parametros de la NIG
NIG<-nigFit(retornos$OMXC)
#Agrupar parametros en un objeto
a<-NIG@fit[["par"]]
a<-data.frame(t(a))
#NIG aleatoria con parametors univariados de nuestra serie
r = rnig(len,
alpha = a$alpha ,
beta = a$beta,
delta = a$delta ,
mu= a$mu)
plot(density(r),
col="red",
main="NIG Univariada",
sub="STI index")
#Pruba de Kormogorov univariada para NIG
ks.test(retornos$OMXC,r)
#Parametros para NIG Multivariada
multNIG<-fit.NIGmv(data=retornos,silent=FALSE)
#Localizar parametros dentor de un obejto
Mom1NIGm<-multNIG@expected.value
Mom2NIGm<-multNIG@variance
#Construccion de la funcion NIG con nuestros  parametros de la funcion multivariada
Mnig <- rghyp(len,multNIG)
retornos1<-as.matrix(retornos)
#Prueba cramer de comprobacion
#Se buscan similitudes estadisticas
cramer.test(Mnig,retornos1,conf.level = .95)
#Graficas de NIG Multivariada
plot(density(Mnig),
col="red",ylim=c(0,60),main="Distribuciones contra NIG multivariada")+
lines(density(retornos$SPX),
col="green")+
lines(density(retornos$FTSE),
col="purple")+
lines(density(retornos$KOSPI),
col="black")+
lines(density(retornos$MSCI),
col="dark blue")+
lines(density(retornos$OMXC),
col="pink")
